pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--main
function start_game()
	cls(0)
	--game state
	gstate=1
	--init player
	pl={}
	new_actor(pl,0)
	--projectiles array
	proj={}
	--melee 'array'
	melee={}
	--enemies array
	en={}
	--explosions array
	ex={}
	--map objects array
	obj={}
	--globals
	t=1 --counts frames
	tmst=time() --time when level starts
	tmcur=0
	kb=90 --invis frames
	score=0
	atkdelay=19 --frames of attack delay
		--dark blue transparent
	palt(0,false)
	palt(1,true)
end

function update_game()
	--projectiles
	proj_update()
	--enemies
	en_update()
	--player
	pl_update()
	--explosions
	ex_update()
	--object animations
	obj_update()
	--level control
	update_game_logic()
	
	--counter and time
	t+=1
	if t>60 then
		t=1
	end
	tmcur = time()-tmst
end

function update_title()
	if btnp()!=0 then
		start_game()
	end
end

function update_gameover()
	if btnp()!=0 then
		gstate=0
	end
end

function _init()
	cls(0)
	--game state
	gstate=0
end

function _update60()
	if gstate==1 then
		update_game()
	elseif gstate==2 then
		update_gameover()
	elseif gstate==0 then
		update_title()
	end
end


-->8
--drawing
function _debug(x,y)
	print(pl.knock[3],x,y+12)
	print(pl.ani)
	print(pl.atktime)
	print(#melee)
end
function draw_game()
	--camera vars
	local camx=peek2(0x5f28)
	local camy=peek2(0x5f2a)
	cls(3)
	--draw background
	map(0,0,0,0)
	--draw objects
	for i=1,#obj do
		spr(obj[i].spr,obj[i].x,obj[i].y)
	end
	--draw projectiles
	for i=1,#proj do
		spr(proj[i].spr,proj[i].x,proj[i].y)
	end
	--draw enemies and enemies dying
	for i=1,#en do
		spr(en[i].spr,en[i].x,en[i].y,1,1,en[i].flip)
	end
	--draw player
 spr(pl.spr,pl.x,pl.y,1,1,pl.flip)
	--draw melee
	if #melee==1 then
		spr(melee[1].spr,melee[1].x,melee[1].y,1,1,melee[1].flip)
	end
	--draw explosions
	for i=1,#ex do
		circfill(ex[i].x,ex[i].y,ex[i].rad,ex[i].colr)
	end
	--draw score
	rectfill(camx,camy,camx+128,camy+10,0)
	print("player hp: " .. pl.hp .."   score: " .. score,camx,camy+1,7)
	--debug
	_debug(camx,camy)
end

function draw_title()
	cls(0)
	print("⬅️░ˇ░⬅️ 🅾️♪░")
	print("◆➡️░★★ █♪▤ ⌂░▤ ⧗🅾️ 🐱🅾️♪⧗☉♪⬆️░")
end

function draw_gameover()
	cls(0)
	print("●█😐░ 🅾️ˇ░➡️")
	print("◆➡️░★★ █♪▤ ⌂░▤ ⧗🅾️ 🐱🅾️♪⧗☉♪⬆️░")
	print("✽☉♪█⬅️ ★🐱🅾️➡️░: " .. score)
end

function _draw()
	if gstate==1 then
		draw_game()
	elseif gstate==2 then
		draw_gameover()
	elseif gstate==0 then
		draw_title()
	end
end
-->8
--objects,atks,enemies
function new_actor(act,custom)
	act.x=64
	act.y=64
	act.xsp=0
	act.ysp=0
	act.spd=1 --speed mod
	act.spr=1
	act.flip=false --sprflip
	act.ani=1 --animation timer for actor
	act.hp=3
	act.xo=0
	act.yo=0
	if custom==0 then --player char
	 act.dir=4 --dir is 0-7 clockwise from 12o'clock
		act.dirbuf=-1
		act.atktime=0
		act.knock={0,0,0,false} --dx,dy,timer
		act.xo=2
		act.yo=1
	elseif custom==1 then --enemy 1
		act.xo=1
		act.yo=2
		act.mvdelay=8 --frames between move calcs
	end
end

function new_proj()
	local _pro={}
	_pro.x=pl.x
	_pro.y=pl.y
	_pro.flip=false --sprflip
	_pro.bspd=2.5
	_pro.dmg=1
	_pro.xo=0
	_pro.yo=0
	local sp=1*_pro.bspd
	local diag=0.714*_pro.bspd
	if pl.dir==0 then
		_pro.xsp=0
		_pro.ysp=-sp
		_pro.spr=24
	elseif pl.dir==1 then
		_pro.xsp=diag
		_pro.ysp=-diag
		_pro.spr=22
	elseif pl.dir==2 then
		_pro.xsp=sp
		_pro.ysp=0
		_pro.spr=21
	elseif pl.dir==3 then
		_pro.xsp=diag
		_pro.ysp=diag
		_pro.spr=23
	elseif pl.dir==4 then
		_pro.xsp=0
		_pro.ysp=sp
		_pro.spr=24
	elseif pl.dir==5 then
		_pro.xsp=-diag
		_pro.ysp=diag
		_pro.spr=22
		_pro.flip=true
	elseif pl.dir==6 then
		_pro.xsp=-sp
		_pro.ysp=0
		_pro.spr=21
	elseif pl.dir==7 then
		_pro.xsp=-diag
		_pro.ysp=-diag
		_pro.spr=23
		_pro.flip=true
	end
	add(proj,_pro)
end

function new_melee()
	local _mel={}
	if pl.dir==0 then
	elseif pl.dir==1 then
	elseif pl.dir==2 then
		_mel.bspr=37
		_mel.anspr1=38
		_mel.spr=_mel.bspr
		_mel.x=pl.x+4
		_mel.y=pl.y+3
		_mel.flip=false
	elseif pl.dir==3 then
	elseif pl.dir==4 then
	elseif pl.dir==5 then
	elseif pl.dir==6 then
		_mel.bspr=37
		_mel.anspr1=38
		_mel.spr=_mel.bspr
		_mel.x=pl.x-4
		_mel.y=pl.y+3
		_mel.flip=true
	elseif pl.dir==7 then
	end
	add(melee,_mel)
end

function new_explosion(x,y,rad,colr,cnt)
	local _ex={}
	_ex.x=x
	_ex.y=y
	_ex.rad=rad
	_ex.colr=colr
	_ex.spr=1
	_ex.counter=cnt
	add(ex,_ex)
end

function new_obj(x,y,kind)
	local _obj={}
	_obj.x=x
	_obj.y=y
	_obj.pckup=false
	_obj.eff=kind --effect for pickup
	if kind==0 then
		_obj.bspr=53
		_obj.spr=_obj.bspr
		_obj.anspr1=57
		_obj.xo=1 --offsets for collide
		_obj.yo=4
		_obj.pckup=true
	end
	add(obj,_obj)
end

function obj_effect(eff)
	if eff==0 then
		pl.hp+=1
	end
end

function obj_update()
	for i=#obj,1,-1 do
		if obj[i].pckup==true then
			if t>30 then
				obj[i].spr=obj[i].bspr
			else
				obj[i].spr=obj[i].anspr1
			end
		end
	end
end

--update and resolve projectiles
function proj_update()
	for i=#proj,1,-1 do
	--looping reverse
		local _pro = proj[i]
		--apply speed
		_pro.x+=_pro.xsp
		_pro.y+=_pro.ysp
		_pro.x=flr(_pro.x)+0.5--correction for diag
		_pro.y=flr(_pro.y)+0.5
		--check collisions with en
		for j=1,#en do
			if chk_col(_pro,en[j]) then
				en[j].hp-=_pro.dmg
				new_explosion(_pro.x+3,_pro.y+3,2,9,2)
				del(proj,_pro)
			end
		end
		--delete projectiles offscreen
		if _pro.x > pl.x+80 or _pro.x < pl.x-80 then
			deli(proj,i)
		end
		if _pro.y > pl.y+80 or _pro.y < pl.y-80 then
			deli(proj,i)
		end
	end
end

--update and resolve explosions
function ex_update()
	if #ex>0 then
		for i=#ex,1,-1 do
		--looping reverse
			if ex[i].counter<=0 then
				del(ex,ex[i])
			else
				ex[i].counter-=1
				if ex[i].counter%5==0 then
					ex[i].rad-=1
				end
			end
		end
	end
end


-->8
--player behavior,camera
function pl_update()
	--make sure we are not dead
	if pl.hp<=0 then
		gameover_transition()
		return
	end
	--get current button pressed
	local bt = btn()
	--modify the bitfield to exclude attack buttons
	local btm = bt&0b001111
	local bta = bt&0b110000
	--speed vars
	local sp=1
	local diag=0.714
	--locomotion cases
	if btm==0b0100 or btm==0b0111 then --dir0
		pl.ysp=-sp
		pl.xsp=0
		pl.dir=0
	elseif btm==0b0110 then --dir1
		pl.ysp=-diag
		pl.xsp=diag
		pl.dir=1
	elseif btm==0b0010 then --dir2
		pl.xsp=sp
		pl.ysp=0
		pl.dir=2	
	elseif btm==0b1010 then --dir3
		pl.ysp=diag
		pl.xsp=diag
		pl.dir=3		
	elseif btm==0b1000 or btm==0b1011 then --dir4
		pl.ysp=sp
		pl.xsp=0	
		pl.dir=4
	elseif btm==0b1001 then --dir5
		pl.ysp=diag
		pl.xsp=-diag
		pl.dir=5
	elseif	btm==0b0001 then --dir6
		pl.xsp=-sp
		pl.ysp=0
		pl.dir=6
	elseif btm==0b0101 then --dir7
		pl.ysp=-diag
		pl.xsp=-diag
		pl.dir=7
	else
		pl.ysp=0
		pl.xsp=0
	end
	
	--apply knockback and invincibility
	if pl.knock[4] then
		local kb=3
		if pl.knock[1]>0 then
			pl.xsp+=kb
		else
			pl.xsp-=kb
		end
		if pl.knock[2]>0 then
			pl.ysp+=kb
		else
			pl.ysp-=kb
		end
		pl.knock[4]=false --run this code one time
	elseif pl.knock[3]>0 then
		pl.knock[3]-=1 --decrement invis
	else
		pl.knock[3]=0 --ensure 0?
	end
	
	--apply speed
	pl.y+=pl.ysp
	pl.x+=pl.xsp
		--correct diag
	pl.y=flr(pl.y)+0.5
	pl.x=flr(pl.x)+0.5
	--map collision check
	if fget(mget((pl.x+4)/8,(pl.y+7)/8),0) then
			pl.x-=pl.xsp
			pl.y-=pl.ysp
	end
	--obj collision check
	for i=1, #obj do
		if chk_col(pl,obj[i]) then
			if obj[i].pckup==true then
				obj_effect(obj[i].eff)
				del(obj,obj[i])
			else
				pl.y-=pl.ysp
				pl.x-=pl.xsp
			end
		end
	end
		
	--check for atk input
	if bta==0b100000 and pl.knock[3]<=30 then
		if pl.atktime%atkdelay==0 then --limit proj amount
			new_proj()
			--play proj sound
			sfx(0)
		else
		 pl.atktime+=1
		end
		pl.atktime+=1
	--check melee
	elseif (bta==0b010000 or bta==0b110000) and pl.knock[3]<=30 then
		new_melee()
			--melee sound
		sfx(3)
		pl.atktime=0
	end

	--animation states
	animate_pl(btm)
	--camera movement
	update_camera(pl.x,pl.y)
	
end

function animate_pl(bt)
	--set sprite base if dir changes
	if pl.dir!=pl.dirbuf or pl.ani>=39 or pl.knock[3]==1 then
		pl.flip=false --saving tokems
		pl.ani=0 --reset animation time
		if pl.dir==0 then
			pl.spr=17
		elseif pl.dir==1 then
			pl.spr=5
		elseif pl.dir==2 then
			pl.spr=33
		elseif pl.dir==3 then
			pl.spr=49
		elseif pl.dir==4 then
			pl.spr=1
		elseif pl.dir==5 then
			pl.spr=49
			pl.flip=true
		elseif pl.dir==6 then
			pl.spr=33
			pl.flip=true
		elseif pl.dir==7 then
			pl.spr=5
			pl.flip=true
		end
		
		--put kb sprite back if needed
		if pl.knock[3]>1 then
			pl.spr=32
		end
	end
		--if damage taken, that takes priority
	if pl.knock[3]==kb then
		pl.spr=32
	end
	if pl.ani==20 then
		if pl.knock[3]==0 then
			pl.spr+=1
			pl.ani+=1
		else
			pl.spr=16
			pl.ani+=1
		end
	elseif pl.ani==10 then
		if pl.knock[3]==0 then
			pl.spr+=1
			pl.ani+=1
		else
			pl.spr=32
			pl.ani+=1
		end
		--keep moving the ani timer if needed
	elseif bt!=0 or pl.knock[3]>0 then
		pl.ani+=1
	end
	--end with updating the direction buffer
	pl.dirbuf=pl.dir
end

function update_camera(x,y)

	camera(0,y-64)

end
-->8
--game logic
function update_game_logic()
		--add new enemies
	if tmcur%3==0 then
		local _en={}
		new_actor(_en,1)
		_en.spr=25
		_en.x=rnd(128)
		_en.y=rnd(256)
		add(en,_en)
	end
	if #obj==0 then
		new_obj(rnd(64)+20,rnd(64)+20,0)
	end
end

--gameover
function gameover_transition()
	del(pl)
	--code for transition here
	gstate=2--gameover
end
-->8
--enemy behavior,ai
function en_update()
if #en!=0 then --only run if there are enemies
	--looping backwards
	for i=#en,1,-1 do
		if t%en[i].mvdelay==0 then
			local trigarr=trig(pl.x,pl.y,en[i].x,en[i].y)
			en[i].x+=trigarr[1]
			en[i].y+=trigarr[2]
			en[i].x=flr(en[i].x)+0.5
			en[i].y=flr(en[i].y)+0.5
		end
		--see if they got to the player
		--but only if not knocked back
		if pl.knock[3]==0 then
			if chk_col(en[i],pl) then
				sfx(1)
				pl.hp-=1
				--set knockback data
				pl.knock={pl.x-en[i].x,pl.y-en[i].y,kb,true}
			end
		end
		
		animate_en(en[i])
		
		--check if enemy is dead and explode
		if en[i].hp<=0 then
			new_explosion(en[i].x+3,en[i].y+3,4,7,12)
			del(en,en[i])
			score+=100
			sfx(2)
		end
	end
end
end

function animate_en(_en)
	if _en.xsp<0 then
		_en.flip=true
	else
		_en.flip=false
	end
	if _en.ani==32 then
		_en.spr+=1
	elseif _en.ani==64 then
		_en.spr-=1
		_en.ani=0
	end
	_en.ani+=1
end

-->8
--todo
--todo sliding map col
--todo scrolling
--todo add melee
--todo obj animations
--todo lives/level reset
--todo generate additional enemies
--todo enemy speed mod doesn't seem to work?
--todo add attack anim
--todo add spread shot, speed boost, health+
--todo add enemy animation states, other logic
-->8
--useful stuff
--collide function
function chk_col(a,b)
	if a.x+a.xo > b.x+7-b.xo then return false end
	if a.x+7-a.xo < b.x+b.xo then return false end
	if a.y+a.yo > b.y+7 then return false	end
	if a.y+7 < b.y+b.yo then return false end
	return true
end
--trig function
function trig(x2,y2,x1,y1)
	local trigarr={}
	trigarr[1]=cos(atan2(x2-x1,y2-y1))
	trigarr[2]=sin(atan2(x2-x1,y2-y1))
	return trigarr
end
__gfx__
00000000110000111100001111000011110000111100001111000011110000111100001111177711111111111111111100000000000000000000000000000000
00000000106776011067760110677601106776011050000110500001105000011050000111707071111777111111111100000000000000000000000000000000
007007001f0ff0f11f0ff0f11f0ff0f11f0ff0f11000760110007601100076011000760111707071117070711111111100000000000000000000000000000000
0007700010ffff0110ffff0110ffff0110ffff011180001111800011118000111180001f11670771117070711111111100000000000000000000000000000000
0007700077077067770770677707706777077061110870111108701111087011110870f117767771116707711111111100000000000000000000000000000000
00700700f877768ff877768ff877768ff87776f11107f71110077f11110f77111007771111167611177677711111111100000000000000000000000000000000
0000000008888881f88888800888888f08888f811078881101788811107888110178881111711171111676111111111100000000000000000000000000000000
00000000168818611681866116681861168188611188681111868811118886111188681111111111117111711111111100000000000000000000000000000000
11000011110000111100001111000011110000111111111111111111111111111111111111111111111111111177771111111111000000000000000000000000
10677601106706011067060110670601106706011111111111111111111111111111111111111111117777111170807111777711000000000000000000000000
1f0880f1100000011000000110000001100000011777711111117711117711111117711111777711177070111160707111708071000000000000000000000000
f0cffc0f170808711708087ff78080711780807f1768671111186711117681111176711117707011176070111167071111607071000000000000000000000000
77c77c77777607777777077777706777177067711177771111768111111867111178711117607011116707117777717711670711000000000000000000000000
17c77c81f877608ff87077811806778f180677811111111111771111111177111176711111670711777771711667117177777111000000000000000000000000
08cccc81188888011888088110888881108888811111111111111111111111111177111177777171166711111111111116671771000000000000000000000000
cccccccc168818611681886116881861168818611111111111111111111111111111111116671111111111111111111111111711000000000000000000000000
11000011110000111100001111000011110000111111111111111111111111111111111111177711111111111111111100000000000000000000000000000000
10677601106677011066770110667701106677011111111111111111111111111111111111777771111777111111111100000000000000000000000000000000
1f0880f11000f0f11000f0f11000f0f11000f0f1118111111111c1c1111111111111111111776771117777711111111100000000000000000000000000000000
f0cffc0f18000ff118000ff118000ff118000ff111181c111188888c111111111111111111677761117767711111111100000000000000000000000000000000
7777777710770711107707111077071110770711111187c11111c7c1111111111111111111767617116777611111111100000000000000000000000000000000
1877778110877711108777f1108777111088777f111c787c111c7c77111111111111111116167616117676171111111100000000000000000000000000000000
088888811088f81101888811108f88110188881111c7c7c11111c7c1111111111111111111711171161676161111111100000000000000000000000000000000
c68cc86c11886611116688111188661111866811111c1c11111c7c7c111111111111111111111111117111711111111100000000000000000000000000000000
11111111110000111100001111000011110000111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111107776011077760110777601107776011111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
1111111110f0f01110f0f01110f0f01110f0f0111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111180fff01180fff01180fff01180fff011111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
1111111110707711107077111070771110707711111a9111111ac111111a71111118911111177111111111111111111100000000000000000000000000000000
1111111110f777f11ff777f110f7771110f777f111a9891111acdc1111a75711118a891111777711111111111111111100000000000000000000000000000000
11111111108888111088881110888811108f881f11989a1111cdca1111757a111198a81111777711111111111111111100000000000000000000000000000000
11111111186888611168861118868611186686111119a111111ca1111117a1111119811111177111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46444464333333333333333553333333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46666664333333333333330555333333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46444464333333333333005555533333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46666664333333335555555555553333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46444464333333355555555555555533333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46666664333333555500000550555555333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46444464333355555000000550005555533333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc46666664333555550000000550000055553333331111111111111111111111111111111100000000000000000000000000000000
3333a3a344444444cccccccc44444444355555000000000550000005555333330000000000000000000000000000000000000000000000000000000000000000
33333abb49444444cc7ccc7c4ffffff4555550000000000555000000555553330000000000000000000000000000000000000000000000000000000000000000
3333a3ab44444444c7cc7ccc4ffffff4555500000000000555000000055555330000000000000000000000000000000000000000000000000000000000000000
3333333344449444cccccccc4ffffff4055550000000000055000000000555550000000000000000000000000000000000000000000000000000000000000000
33e3e33344444444cccccccc4ffffff4005555555000000055000000000055550000000000000000000000000000000000000000000000000000000000000000
333e333344444944cccccc7c4ffffff4000555555555550055000000000000050000000000000000000000000000000000000000000000000000000000000000
33ebe33349444444c7ccc7cc4ffffff4330000055555555555005555555555550000000000000000000000000000000000000000000000000000000000000000
333bb33344444444cccccccc44444444330000000000555555555555555555550000000000000000000000000000000000000000000000000000000000000000
3d3d3333444444440000000000000000330000000000000005555500000000000000000000000000000000000000000000000000000000000000000000000000
33d33333494444440000000000000000333001115111111100001155511155550000000000000000000000000000000000000000000000000000000000000000
3dbd3333444444940000000000000000333055555555555500005555555555550000000000000000000000000000000000000000000000000000000000000000
bbb33333444944440000000000000000333055555555555500005555555555000000000000000000000000000000000000000000000000000000000000000000
33333333444444440000000000000000333055555555510000000055555550000000000000000000000000000000000000000000000000000000000000000000
33333333444444440000000000000000333005555555000000000000055550050000000000000000000000000000000000000000000000000000000000000000
33333333944444490000000000000000333001555500555000000000000050050000000000000000000000000000000000000000000000000000000000000000
33333333444444440000000000000000333005555005555000005555500000050000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333000000555555500005555555000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333000005555555500005555555000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333300005555555000005555000003330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333330005555155000005553333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333330000000000000033333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333300000000000033333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333333300000000333333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333333330000000333333333330000000000000000000000000000000000000000000000000000000000000000
35242524242524242425242425242425242400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010101010000000000000000000001010101010100000000000000000000000001010101000000000000000000000000010101010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
5353535353535353535353535353535353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404040404040404050505040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404040404040404060606040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404040404040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353404040404040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4253504040404040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5253504040404040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5242506040404040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5242525240504040404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5342525243435060505050605040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5350605243434252525242525252405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340505050505050505252424252405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404040424040404240505052525353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404052424240404040406042425353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404242536042404040404042425353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404242505342424040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404052424252404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340404040424240404040404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353534040404040405353404040405353530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5353534040404040405353404040405241530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5361616141414040404040404040525241530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5341615151614140404040404040525241530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5341414151414141404052525252526161530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5361616161515141435252525151515141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5361616161615243435252615141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5351525252525243436161614141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5352525252526143615151414141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5352525261515141414141414141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340525261514141414141414141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5340525251414141414141414141414141530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5352525161514141414141414141414141534000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5352425242425242424252424252424252420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000005050070500c05015050260500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300000a04010040170402004024040240402504021040140300b03009030090400904011040170401f0401e040110400804004040020400204001040010300003000000000000000000000000000000000000
000100000e42010420154201a4201d4201e4201e42019420104200842005420024200042000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
000200000000011550125501255013550135501555016550185501b5501e5501c5501b55018550185501755016550125501255000000000000000000000000000000000000000000000000000000000000000000
__music__
00 00424344

