pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
--main
function start_game()
	cls(0)
	--game state
	gstate=1
	--init player
	pl={}
	new_actor(pl)
	--projectiles array
	projectiles={}
	--enemies array
	en={}
	--explosions array
	ex={}
	--map objects array
	obj={}
	--globals
	t=1 --counts frames
	tmst=time() --time when level starts
	tmcur=0
	pl_speed=1 --speed upgrade
	score=0
		--dark blue transparent
	palt(0,false)
	palt(1,true)
end

function update_game()
	--projectiles
	proj_update()
	--enemies
	en_update()
	--player
	pl_update()
	--explosions
	ex_update()
	--level control
	update_game_logic()
	
	--counter an time
	t+=1
	if t>60 then
		t=1
	end
	tmcur = time()-tmst
end

function update_title()
	if btnp()!=0 then
		start_game()
	end
end

function _init()
	cls(0)
	--game state
	gstate=0
end

function _update60()
	if gstate==1 then
		update_game()
	elseif gstate==2 then
		--pass; gameover state will go here
	elseif gstate==0 then
		update_title()
	end
end


-->8
--drawing
function draw_game()
	cls(0)
	--draw background
	map(0,0,0,0,16,16)
	--draw map objects
	for i=1,#obj do
		--pass
	end
	--draw projectiles
	for i=1,#projectiles do
		spr(projectiles[i].spr,projectiles[i].x,projectiles[i].y)
	end
	--draw enemies and enemies dying
	for i=1,#en do
		spr(en[i].spr,en[i].x,en[i].y,1,1,en[i].flip)
	end
	--draw explosions
	for i=1,#ex do
		circfill(ex[i].x,ex[i].y,4,7)
	end
	--draw player
	--spr(16,pl.x-7,pl.y)
 spr(pl.spr,pl.x,pl.y,1,1,pl.flip)
	--draw score
	rectfill(0,0,128,10,0)
	print("player hp: " .. pl.hp .."   score: " .. score,0,1,7)
	--debug
	_debug()
end

function draw_title()
	cls(0)
	print("∧░⬅️🐱🅾️😐░")
end

function draw_gameover()
	cls(0)
	print("●█😐░ 🅾️ˇ░➡️")
end

function _draw()
	if gstate==1 then
		draw_game()
	elseif gstate==2 then
		draw_gameover()
	elseif gstate==0 then
		draw_title()
	end
end
-->8
--tools
function new_actor(act)
	act.x=64
	act.y=64
	act.xsp=0
	act.ysp=0
	act.spd=1 --speed mod
	act.spr=1
	act.dir=4 --dir is 0-7 clockwise from 12o'clock
	act.dirbuf=-1
	act.atktime=0
	act.flip=false --sprflip
	act.ani=1 --animation timer for actor
	act.hp=1
	act.knock={false,0,0,1} --init,dx,dy,timer
end

function new_proj()
	local pro={}
	pro.x=pl.x
	pro.y=pl.y
	pro.flip=false --sprflip
	pro.bspd=2.5
	pro.dmg=1
	local sp=1*pro.bspd
	local diag=0.714*pro.bspd
	if pl.dir==0 then
		pro.xsp=0
		pro.ysp=-sp
		pro.spr=23
	elseif pl.dir==1 then
		pro.xsp=diag
		pro.ysp=-diag
		pro.spr=21
	elseif pl.dir==2 then
		pro.xsp=sp
		pro.ysp=0
		pro.spr=20
	elseif pl.dir==3 then
		pro.xsp=diag
		pro.ysp=diag
		pro.spr=22
	elseif pl.dir==4 then
		pro.xsp=0
		pro.ysp=sp
		pro.spr=23
	elseif pl.dir==5 then
		pro.xsp=-diag
		pro.ysp=diag
		pro.spr=21
		pro.flip=true
	elseif pl.dir==6 then
		pro.xsp=-sp
		pro.ysp=0
		pro.spr=20
	elseif pl.dir==7 then
		pro.xsp=-diag
		pro.ysp=-diag
		pro.spr=22
		pro.flip=true
	end
	add(projectiles,pro)
end

function new_explosion(x,y)
	local _ex={}
	_ex.x=x
	_ex.y=y
	_ex.spr=1
	_ex.counter=10
	add(ex,_ex)
end

--update and resolve projectiles
function proj_update()
	for i=#projectiles,1,-1 do
	--looping reverse
		local pro = projectiles[i]
		--apply speed
		pro.x+=pro.xsp
		pro.x=flr(pro.x)+0.5--correction for diag
		pro.y+=pro.ysp
		pro.y=flr(pro.y)+0.5
		--check collisions with en
		for j=1,#en do
			if chk_col(pro,en[j]) then
				en[j].hp-=pro.dmg
				del(projectiles,pro)
			end
		end
		--delete projectiles offscreen
		if pro.x > 128 or pro.x < 0 then
			deli(projectiles,i)
		end
		if pro.y > 128 or pro.y < 0 then
			deli(projectiles,i)
		end
	end
end

--update and resolve explosions
function ex_update()
	if #ex>0 then
		for i=#ex,1,-1 do
		--looping reverse
			if ex[i].counter<=0 then
				del(ex,ex[i])
			else
				ex[i].counter-=1
			end
		end
	end
end
--collide function
function chk_col(a,b)
	if a.x>b.x+7 then return false end
	if a.x+7<b.x then return false end
	if a.y>b.y+7 then return false	end
	if a.y+7<b.y then return false end
	return true
end
-->8
--player behavior
function pl_update()
	--make sure we are not dead
	if pl.hp<=0 then
		--todo
		--gstate=2--gameover
		--return
	end
	--get current button pressed
	local bt = btn()
	--modify the bitfield to exclude attack buttons
	local btm = bt&0b001111
	local bta = bt&0b110000
	--speed vars
	local sp=1*pl_speed
	local diag=0.714*pl_speed
	--locomotion cases
	if btm==0b0100 or btm==0b0111 then --dir0
		pl.ysp=-sp
		pl.xsp=0
		pl.dir=0
	elseif btm==0b0110 then --dir1
		pl.ysp=-diag
		pl.xsp=diag
		pl.dir=1
	elseif btm==0b0010 then --dir2
		pl.xsp=sp
		pl.ysp=0
		pl.dir=2	
	elseif btm==0b1010 then --dir3
		pl.ysp=diag
		pl.xsp=diag
		pl.dir=3		
	elseif btm==0b1000 or btm==0b1011 then --dir4
		pl.ysp=sp
		pl.xsp=0	
		pl.dir=4
	elseif btm==0b1001 then --dir5
		pl.ysp=diag
		pl.xsp=-diag
		pl.dir=5
	elseif	btm==0b0001 then --dir6
		pl.xsp=-sp
		pl.ysp=0
		pl.dir=6
	elseif btm==0b0101 then --dir7
		pl.ysp=-diag
		pl.xsp=-diag
		pl.dir=7
	else
		pl.ysp=0
		pl.xsp=0
	end
	
	animate_pl(btm)
	
	--apply knockback and invincibility
	if pl.knock[1] then
		--todo
		if pl.knock[2]>0 then
			pl.xsp+=10
		else
			pl.xsp-=10
		end
		if pl.knock[3]>0 then
			pl.ysp+=10
		else
			pl.ysp-=10
		end
	--	pl.knock[4]=15 --15f window
		pl.knock[1]=false
	end
	
	--apply speed
	pl.y+=pl.ysp
	pl.x+=pl.xsp
		--correct diag
	pl.y=flr(pl.y)+0.5
	pl.x=flr(pl.x)+0.5
	--make sure there are no collisions
	--for i=
	--chk_col(pl.x,pl.y,
	if fget(mget(pl.x/8,pl.y/8),0) then
		pl.y-=pl.ysp
		pl.x-=pl.xsp
	end

	
	--check for attack input
	if bta==0b100000 then
		if pl.atktime%19==0 then --limit proj amount
			new_proj()
			--play proj sound
			sfx(0)
		else
		 pl.atktime+=1
		end
		pl.atktime+=1
	else
		pl.atktime=0
	end
	
end

function animate_pl(bt)
	--action?
	if bt|0b000000==0 then
		pl.ani=1 --reset animation timer
	else
		pl.ani+=1
	end
	--set sprite base if dir changes
	if pl.dir!=pl.dirbuf then
		pl.flip=false --saving tokems
		pl.ani=1 --reset animation time
		if pl.dir==0 then
			pl.spr=17
		elseif pl.dir==1 then
			pl.spr=4
		elseif pl.dir==2 then
			pl.spr=33
		elseif pl.dir==3 then
			pl.spr=49
		elseif pl.dir==4 then
			pl.spr=1
		elseif pl.dir==5 then
			pl.spr=49
			pl.flip=true
		elseif pl.dir==6 then
			pl.spr=33
			pl.flip=true
		elseif pl.dir==7 then
			pl.spr=4
			pl.flip=true
		end
	end
	
	if pl.ani%60==0 then
		pl.spr-=2
	elseif pl.ani%40==0 then
		pl.spr+=1
	elseif pl.ani%20==0 then
		pl.spr+=1
	end
	
	--animation check
	if pl.ani>60 then
		pl.ani=1
	end
	
	--end with updating the direction buffer
	pl.dirbuf=pl.dir
end


-->8
--game logic
function update_game_logic()
		--add new enemies
	if tmcur%1==0 then
		local _en={}
		new_actor(_en)
		_en.spr=25
		_en.x=rnd(128)
		_en.y=rnd(128)
		add(en,_en)
	end
end
-->8
--enemy behavior&collide
function en_update()
	--looping backwards
	for i=#en,1,-1 do
		if t%4==0 then
			local trigarr=trig(pl.x,pl.y,en[i].x,en[i].y)
			en[i].x+=trigarr[2]*en[i].spd
			en[i].y+=trigarr[1]*en[i].spd
			en[i].x=flr(en[i].x)+0.5
			en[i].y=flr(en[i].y)+0.5
		end
		--see if they got to the player
		--but only if not invis
		if pl.knock[4]==0 then
			if chk_col(en[i],pl) then
				sfx(1)
				pl.hp-=1
				--set knockback data
				pl.knock={true,pl.x-en[i].x,pl.y-en[i].y,360}
			end
		else
			pl.knock[4]-=1 --decrement invis
		end
		--check if enemy is dead and explode
		if en[i].hp<=0 then
			new_explosion(en[i].x,en[i].y)
			del(en,en[i])
			score+=100
			sfx(1)
		end
	end
end

function trig(x2,y2,x1,y1)
	--figure out speeds
	local trigarr={}
	local mod=1
	if y2-y1<0then
		mod=-1
	end
		trigarr[2]=cos(atan2(mod*(y2-y1)/(x2-x1)))
		trigarr[1]=mod
	return trigarr
end


-->8
--debug
function _debug()
	print(pl.knock[4],0,12)
end
__gfx__
00000000110000111100001111000011110001111100011111000111111111111111111111111111000000000000000000000000000000000000000000000000
00000000107776011077760110777601107700111077001110770011111111111111111111111111000000000000000000000000000000000000000000000000
007007001f0ff0f11f0ff0f11f0ff0f1100076011000760110007601111111111111111111111111000000000000000000000000000000000000000000000000
0007700010ffff0110ffff0110ffff01118000111180001111800011111111111111111111111111000000000000000000000000000000000000000000000000
00077000770770777707707777077077100777f110077711100777f1111111111111111111111111000000000000000000000000000000000000000000000000
00700700f877768ff867778ff877768f1077771101777f1110777711111111111111111111111111000000000000000000000000000000000000000000000000
0000000008888881f88888800888888f108888111188881110888811111111111111111111111111000000000000000000000000000000000000000000000000
00000000168188611688186116818861118866111886681111886611111111111111111111111111000000000000000000000000000000000000000000000000
11111111110000111100001111000011111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111107706011077060110770601111111111111111111111111111111111111111111777711111111111111111100000000000000000000000000000000
11111111108008011080080110800801177771111111771111771111111771111111111111707071117777111111111100000000000000000000000000000000
11111110170000711700007117000071176867111118671111768111117671111111111111677771117070711111111100000000000000000000000000000000
11111001777607777776077777706777117777111176811111186711117871111111111111670711117777711111111100000000000000000000000000000000
11110010f877608ff870768ff806678f111111111177111111117711117671111111111177777111116707111111111100000000000000000000000000000000
11110101188888811888888ff8888881111111111111111111111111117711111111111116671111776771111111111100000000000000000000000000000000
11101010168818611681886116881861111111111111111111111111111111111111111111111111167711111111111100000000000000000000000000000000
11111111110000111100001111000011111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111107777011077770110777701111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
111111111000f0f11000f0f11000f0f111171111111111111111c1c1111111111111111111111111111111111111111100000000000000000000000000000000
1111111118000ff118000ff118000ff111c7c11111171c1111177771111111111111111111111111111111111111111100000000000000000000000000000000
1111111110770711107707111077071111171111111171c11111c1c1111111111111111111111111111111111111111100000000000000000000000000000000
11111111108877f101887f11108877f111c7c111111c171111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111118888111188881111888811111111111111c11111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111188866111186681118668811111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111110000111100001111000011111c7c11111c111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111107776011077760110777601111171111171c11111111111111111111111111111111111111111111111111100000000000000000000000000000000
1111111110f0f01110f0f01110f0f011111c7c111c17111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111180fff01180fff01180fff011111711111c1711111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111107077111070771110707711111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
1111111110f777f11ff777f110f777f1111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111118888111188881111888811111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
11111111186886611168886118688661111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16000061333333333333333553333333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16666661333333333333330555333333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16111161333333333333005555533333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16666661333333335555555555553333333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16111161333333355555555555555533333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16666661333333555500000550555555333333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16000061333355555000000550005555533333331111111111111111111111111111111100000000000000000000000000000000
3333333344444444cccccccc16666661333555550000000550000055553333331111111111111111111111111111111100000000000000000000000000000000
3333a3a344f44f44ccc7cccc00000000355555000000000550000005555333330000000000000000000000000000000000000000000000000000000000000000
33333abb44444444ccc7cccc00000000555550000000000555000000555553330000000000000000000000000000000000000000000000000000000000000000
3333a3abf4f44f4fc7cccccc00000000555500000000000555000000055555330000000000000000000000000000000000000000000000000000000000000000
3333333344444444cccccc7c00000000055550000000000055000000000555550000000000000000000000000000000000000000000000000000000000000000
33e3e33344444444cccccccc00000000005555555000000055000000000055550000000000000000000000000000000000000000000000000000000000000000
333e3333f4f44f4fccc7cccc00000000000555555555550055000000000000050000000000000000000000000000000000000000000000000000000000000000
33ebe33344444444cccccc7c00000000330000055555555555005555555555550000000000000000000000000000000000000000000000000000000000000000
333bb33344f44f447cccccc700000000330000000000555555555555555555550000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000330000000000000005555500000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333001115111111100001155511155550000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333055555555555500005555555555550000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333055555555555500005555555555000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333055555555510000000055555550000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333005555555000000000000055550050000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333001555500555000000000000050050000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333005555005555000005555500000050000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333000000555555500005555555000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333000005555555500005555555000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333300005555555000005555000003330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333330005555155000005553333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333330000000000000033333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333300000000000033333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333333300000000333333333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000333333333333330000000333333333330000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100010101010000000000000000000001000101010100000000000000000000000001010101000000000000000000000000010101010000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4040405151515140514040404040404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040515151515140514051514040404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040515151514040514051515140404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4051515151514040514051515151404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4051515151514051404051515151404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5151515151515050404040515140404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5251515151515150504040515140404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5251515151514051504040505040404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5252525251514051404040405040404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5050525243524040505050505040404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040505243525252525252525252404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040505050505050505252525252404040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404052524040404040404040404040404040404040404040404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404044454647404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404054555657404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404064656667404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404074757677404040404040404040404040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
4040404040404040404040404040404040070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707074040074040404040404040070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070040404007070740404040404000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000070700070707070740400007070707070000004040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000070000000000000707070707000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000005050070500c05015050260500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001005000200130500020010050002000020013050002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200002000020000200002000000000000
__music__
00 00424344

